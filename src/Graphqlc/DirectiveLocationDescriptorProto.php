<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: graphqlc/descriptor.proto

namespace Graphqlc;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>graphqlc.DirectiveLocationDescriptorProto</code>
 */
class DirectiveLocationDescriptorProto extends \Google\Protobuf\Internal\Message
{
    protected $location;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $executable_location
     *     @type int $type_system_location
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Graphqlc\Descriptor::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.graphqlc.ExecutableDirectiveLocation executable_location = 2;</code>
     * @return int
     */
    public function getExecutableLocation()
    {
        return $this->readOneof(2);
    }

    /**
     * Generated from protobuf field <code>.graphqlc.ExecutableDirectiveLocation executable_location = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setExecutableLocation($var)
    {
        GPBUtil::checkEnum($var, \Graphqlc\ExecutableDirectiveLocation::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.graphqlc.TypeSystemDirectiveLocation type_system_location = 3;</code>
     * @return int
     */
    public function getTypeSystemLocation()
    {
        return $this->readOneof(3);
    }

    /**
     * Generated from protobuf field <code>.graphqlc.TypeSystemDirectiveLocation type_system_location = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setTypeSystemLocation($var)
    {
        GPBUtil::checkEnum($var, \Graphqlc\TypeSystemDirectiveLocation::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getLocation()
    {
        return $this->whichOneof("location");
    }

}

