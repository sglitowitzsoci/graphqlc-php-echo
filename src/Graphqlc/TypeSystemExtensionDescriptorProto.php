<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: graphqlc/descriptor.proto

namespace Graphqlc;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>graphqlc.TypeSystemExtensionDescriptorProto</code>
 */
class TypeSystemExtensionDescriptorProto extends \Google\Protobuf\Internal\Message
{
    protected $extension;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Graphqlc\SchemaExtensionDescriptorProto $schema_extension
     *     @type \Graphqlc\TypeExtensionDescriptorProto $type_extension
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Graphqlc\Descriptor::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.graphqlc.SchemaExtensionDescriptorProto schema_extension = 1;</code>
     * @return \Graphqlc\SchemaExtensionDescriptorProto
     */
    public function getSchemaExtension()
    {
        return $this->readOneof(1);
    }

    /**
     * Generated from protobuf field <code>.graphqlc.SchemaExtensionDescriptorProto schema_extension = 1;</code>
     * @param \Graphqlc\SchemaExtensionDescriptorProto $var
     * @return $this
     */
    public function setSchemaExtension($var)
    {
        GPBUtil::checkMessage($var, \Graphqlc\SchemaExtensionDescriptorProto::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.graphqlc.TypeExtensionDescriptorProto type_extension = 2;</code>
     * @return \Graphqlc\TypeExtensionDescriptorProto
     */
    public function getTypeExtension()
    {
        return $this->readOneof(2);
    }

    /**
     * Generated from protobuf field <code>.graphqlc.TypeExtensionDescriptorProto type_extension = 2;</code>
     * @param \Graphqlc\TypeExtensionDescriptorProto $var
     * @return $this
     */
    public function setTypeExtension($var)
    {
        GPBUtil::checkMessage($var, \Graphqlc\TypeExtensionDescriptorProto::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getExtension()
    {
        return $this->whichOneof("extension");
    }

}

